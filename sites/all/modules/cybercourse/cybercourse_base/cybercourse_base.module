<?php

/*
 * Defines some basic CyCo stuff.
 */

include 'cybercourse_base_utilities.inc';
include 'cybercourse_error_handler.inc';

/**
 * Implements hook_menu.
 */
function cybercourse_base_menu() {
  $items = array();
  $items['admin/config/cybercourse'] = array(
    'title' => 'Cybercourse',
    'description' => 'Configuration of the Cybercourse system.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/cybercourse/base'] = array(
    'title' => 'Cybercourse base settings',
    'description' => 'Base configuration of the Cybercourse system.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cybercourse_base_settings_form'),
    'access arguments' => array('administer site configuration'),
//    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  //Client-side error handler callback.
  $items['cybercourse_handle_client_error'] = array(
    'page callback' => 'cybercourse_base_client_error',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission.
 */
//function cybercourse_exercise_permission() {
//  return array(
//    'administer cybercourse' => array(
//      'title' => t('Administer Cybercourse'),
//      'restrict access' => TRUE,
//    ),
//  );
//}
//
/**
 * Define base config form.
 */
function cybercourse_base_settings_form($form, &$form_state) {
  $form['nothing'] = array(
    '#type' => 'markup',
    '#markup' => 'Nothing',
  );
  return $form;
}

/**
 * Handle a client-side error.
 * Most of the error handling is in another file. This function is here so
 * the menu processor can handle it.
 * @param string $message The Bad Thing that happened.
 */
function cybercourse_base_client_error() {
  $message = t( $_GET['message'] );
  $message = 'Something bad happened on the client-side: ' . $message;
  static $error_handler = NULL;
  if ( is_null($error_handler) ) {
    $error_handler = new CyberCourseErrorHandler();
  }
  $error_handler->reportError($message, FALSE);
  drupal_json_output(
      array('status' => TRUE)
  );
}