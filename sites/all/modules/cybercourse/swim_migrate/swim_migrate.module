<?php

function swim_migrate_menu() {
  $items = array();
  $items['admin/swim-migrate'] = array(
    'title' => 'SWIM migrate',
    'description' => 'SWIM migration',
    'page callback' => 'swim_migrate_main_menu',
    'access arguments' => array('administer content types'),
  );
  
  //Build cache of content.
  $items['admin/swim-migrate/init-content-type-2-cache-list'] = array(
    'title' => 'Initialize list of content types to cache',
    'page callback' => 'swim_migrate_init_list_content_types_to_cache',
    'access arguments' => array('administer content types'),
  );
  $items['admin/swim-migrate/choose-content-type-to-cache'] = array(
    'title' => 'Choose content type to cache',
    'page callback' => 'swim_migrate_choose_content_type_to_cache',
    'access arguments' => array('administer content types'),
  );
  $items['admin/swim-migrate/cache-content-type/%'] = array(
    'title' => 'Caching content type',
    'page callback' => 'swim_migrate_cache_content_type',
    'page arguments' => array(3),
    'access arguments' => array('administer content types'),
  );

  //Copy cache to final destination.
  $items['admin/swim-migrate/init-content-type-2-final-list'] = array(
    'title' => 'Initialize list of content types to copy from cahce to final',
    'page callback' => '_sm_init_list_content_types_cache_to_final',
    'access arguments' => array('administer content types'),
  );
  $items['admin/swim-migrate/choose-content-type-to-final'] = array(
    'title' => 'Choose content type to copy from cache to final',
    'page callback' => 'swim_migrate_choose_content_type_cache_to_final',
    'access arguments' => array('administer content types'),
  );
  $items['admin/swim-migrate/restore-content-type/%'] = array(
    'title' => 'Restore content type',
    'page callback' => 'swim_migrate_restore_content_type',
    'page arguments' => array(3),
    'access arguments' => array('administer content types'),
  );
  
  return $items;
}

function swim_migrate_main_menu() {
  $result = 
        "<p><a href='/admin/swim-migrate/init-content-type-2-cache-list'>"
      .   "Initialize list of content types to cache</a></p>"
      . "<p><a href='/admin/swim-migrate/choose-content-type-to-cache'>"
      .   "Choose a content type to cache</a></p>"
      . "<p></p>"
      . "<p><a href='/admin/swim-migrate/init-content-type-2-final-list'>"
      .   "Initialize list of content types to restore</a></p>"
      . "<p><a href='/admin/swim-migrate/choose-content-type-to-final'>"
      .   "Choose a content type to restore</a></p>";
  return $result;
}

function swim_migrate_init_list_content_types_to_cache() {
  //List all content types.
  $content_types = node_type_get_types();
  $types_to_process = array();
  foreach ($content_types as $content_type_name => $content_type) {
    $fields = field_info_instances('node', $content_type_name);
    if (isset($fields['field_body_ck'])) {
      $types_to_process[] = $content_type_name;
    }
  }
  $list = implode(',', $types_to_process);
  variable_set('swim_migrate_types_not_cached', $list);
  variable_set('swim_migrate_types_cached', '');
$display_list = str_replace(',', '<br>', $list);
  return '<p>List initialized to:<br> ' . $display_list . '</p>'
      . '<a href="/admin/swim-migrate">back</a>';
}

function swim_migrate_choose_content_type_to_cache() {
  $list_unprocessed = variable_get('swim_migrate_types_not_cached');
  $list_processed = variable_get('swim_migrate_types_cached');
  $types_unprocessed = array_filter(explode(',', $list_unprocessed));
  $types_processed = array_filter(explode(',', $list_processed));
  $result = '';
  $result .= "<h2>Unprocessed</h2>\n<ul>\n";
  foreach ($types_unprocessed as $type) {
    $link = '<a href="/admin/swim-migrate/cache-content-type/' . $type . '">'
        . $type . '</a>';
    $result .= '  <li>' . $link . "</li>\n";
  }
  $result .= "</ul>\n";
  $result .= "<h2>Processed</h2>\n<ul>\n";
  foreach ($types_processed as $type) {
    $result .= '  <li>' . $type . "</li>\n";
  }
  $result .= "</ul>\n";
  $result .= '<a href="/admin/swim-migrate">back</a>';
  return $result;
}

function swim_migrate_cache_content_type($type) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', $type);
  $result = $query->execute();
  $output = '<p>Processing ' . $type . ':</p>';
  if (!empty($result['node'])) {
    $nids = array_keys($result['node']);
    $output .= '</ul>';
    foreach ($nids as $nid) {
      $node = node_load($nid, NULL, TRUE);
      $rest_main = isset( $node->body[LANGUAGE_NONE] )
          ? $node->body[LANGUAGE_NONE][0]['value']
          : '';
      $rest_summary = isset( $node->body[LANGUAGE_NONE] )
          ? $node->body[LANGUAGE_NONE][0]['summary']
          : '';
      $ck_main = isset( $node->field_body_ck[LANGUAGE_NONE] )
          ? $node->field_body_ck[LANGUAGE_NONE][0]['value']
          : '';
      $ck_summary = isset( $node->field_body_ck[LANGUAGE_NONE] )
          ? $node->field_body_ck[LANGUAGE_NONE][0]['summary']
          : '';
      $output .= '<li>' . $nid;
      try {
        db_insert('swim_migrate')
            ->fields(array(
              'nid' => $nid,
              'content_type' => $type,
              'main_rest' => $rest_main,
              'summary_rest' => $rest_summary,
              'main_ck' => $ck_main,
              'summary_ck' => $ck_summary,
            ))
            ->execute();
      } catch (PDOException $e) {
        $output .= ' EVIL! ' . $e->getMessage();
      }
      $output .= "</li>\n";
    }
    $output .= "</ul>";
  }
  $output .= '<p><a href="/admin/swim-migrate/choose-content-type-to-cache">back</a></p>';
  //Show what is processed.
  $list_unprocessed = variable_get('swim_migrate_types_not_cached');
  $list_processed = variable_get('swim_migrate_types_cached');
  $types_unprocessed = explode(',', $list_unprocessed);
  $types_processed = explode(',', $list_processed);
  foreach( $types_unprocessed as $index => $type_unprocessed ) {
    if ( $type_unprocessed == $type ) {
      unset( $types_unprocessed[$index] );
    }
  }
  $types_processed[] = $type;
  $list = implode(',', $types_unprocessed);
  variable_set('swim_migrate_types_not_cached', $list);
  $list = implode(',', $types_processed);
  variable_set('swim_migrate_types_cached', $list);
  
  
  return $output;
}


function _sm_init_list_content_types_cache_to_final() {

//  $node = node_load(123, NULL, TRUE);
//  $node->field_body = array(
//    LANGUAGE_NONE => array(
//      array(
//        'pure_rest' => 'main thing *dog*',
//        'pure_rest_summary' => 'summary thing *cat*',
//        'wysiwyg_rep' => 'main thing <em>dog</em>',
//        'wysiwyg_rep_summary' => 'summary thing <em>cat</em>',
//      ),
//    )
//  );
//  field_attach_update('node', $node);  
//  return 'DOGZ';
  
  
  define( 'FIELD_2_CHECK', 'field_body' );
  $output = '';
  //Get all content type names listed in cache table.
  $content_type_names = _sm_fetch_content_type_names();
  //For each one, check that the content type has a field called FIELD_2_CHECK.
  $missing_list = '';
  foreach ( $content_type_names as $content_type_name ) {
    if ( ! _sm_cont_type_has_field( $content_type_name, FIELD_2_CHECK ) ) {
      $missing_list .= ' ' . $content_type_name;
    }
  }
  if ( $missing_list ) {
    $output .= '<p>These content types have no field with a machine name of '
        . FIELD_2_CHECK . ': ' . $missing_list . '</p>';
  }
  else {
    //Set up variables to show which content types have been restored, 
    //and which have not.
    $list = implode(',', $content_type_names);
    variable_set('swim_migrate_types_not_restored', $list);
    variable_set('swim_migrate_types_restored', '');
  }
  //Show done link.
  $output .= '<p><a href="/admin/swim-migrate">back</a></p>';
  return $output;
}

function _sm_fetch_content_type_names() {
  //Get all content type names listed in cache table.
  $content_type_names = array();
  $result = db_query( 'select distinct content_type from swim_migrate' );
  foreach( $result as $row ) {
    $content_type_names[] = $row->content_type;
  }
  return $content_type_names;
}

//Does the given content type have a field with the given name?
function _sm_cont_type_has_field( $content_type_name, $field_name ) {
  $fields = field_info_instances('node', $content_type_name);
  return isset( $fields[ $field_name ] );
}

function swim_migrate_choose_content_type_cache_to_final() {
  $list_unrestored = variable_get('swim_migrate_types_not_restored');
  $list_restored = variable_get('swim_migrate_types_restored');
  $types_unrestored = array_filter(explode(',', $list_unrestored));
  $types_restored = array_filter(explode(',', $list_restored));
  $result = '';
  $result .= "<h2>Unprocessed (not restored)</h2>\n<ul>\n";
  foreach ($types_unrestored as $type) {
    $link = '<a href="/admin/swim-migrate/restore-content-type/' . $type . '">'
        . $type . '</a>';
    $result .= '  <li>' . $link . "</li>\n";
  }
  $result .= "</ul>\n";
  $result .= "<h2>Processed</h2>\n<ul>\n";
  foreach ($types_restored as $type) {
    $result .= '  <li>' . $type . "</li>\n";
  }
  $result .= "</ul>\n";
  $result .= '<p><a href="/admin/swim-migrate">back</a></p>';
  return $result;
}

function swim_migrate_restore_content_type( $content_type_name ) {
  define( 'FIELD_2_RESTORE_TO', 'field_body' );
  $output = '';
  //Fetch records of the content type from cache table.
  
  $output .= '<ul>';
  //For each record...
  $query = 'select * from swim_migrate where content_type=\'' 
      . $content_type_name . '\'';
  $result = db_query( $query );
  foreach( $result as $row ) {
    $nid = $row->nid;
    //Load the node.
    $node = node_load($nid, NULL, TRUE);
    //Update field data.
    $node->field_body = array(
      LANGUAGE_NONE => array(
        array(
          'pure_rest' => $row->main_rest,
          'pure_rest_summary' => $row->summary_rest,
          'wysiwyg_rep' => $row->main_ck,
          'wysiwyg_rep_summary' => $row->summary_ck,
        ),
      )
    );
    //Save the field data.
    field_attach_update('node', $node);    
    //Output nid.
    $output .= '<li>' . $nid . '</li>';
  }
  
  $output .= '</ul>';
  //Output back link.
  $output .= '<p><a href="/admin/swim-migrate/choose-content-type-to-final">back</a></p>';  

  //Show what is processed.
  $list_unrestored = variable_get('swim_migrate_types_not_restored');
  $list_restored = variable_get('swim_migrate_types_restored');
  $types_unrestored = explode(',', $list_unrestored);
  $types_restored = explode(',', $list_restored);
  foreach( $types_unrestored as $index => $type_unrestored ) {
    if ( $type_unrestored == $content_type_name ) {
      unset( $types_unrestored[$index] );
    }
  }
  $types_restored[] = $content_type_name;
  $list = implode(',', $types_unrestored);
  variable_set('swim_migrate_types_not_restored', $list);
  $list = implode(',', $types_restored);
  variable_set('swim_migrate_types_restored', $list);

  return $output;
}